#include <WiFi.h>
#include "Freenove_WS2812_Lib_for_ESP32.h"
#define LEDS_COUNT  32
#define LEDS_PIN  12
#define CHANNEL   0


//請修改以下參數--------------------------------------------
char ssid[] = "Tenda_17CD00";
char password[] = "28952084";

int Rled = 16; //宣告紅色Led在 GPIO
int Yled = 17; //宣告黃色Led在 GPIO
int Gled = 18; //宣告綠色Led在 GPIO
int Bled = 19; //宣告藍色Led在 GPIO
int FAN= 27; //宣告USB風扇在 GPIO

WiFiServer server(80); //宣告伺服器位在80 port


Freenove_ESP32_WS2812 strip = Freenove_ESP32_WS2812(LEDS_COUNT, LEDS_PIN, CHANNEL, TYPE_GRB);



void setup()
{
  Serial.begin(115200);
 
  strip.begin();
  strip.setBrightness(20);  
  
  pinMode(Rled, OUTPUT); //紅色LED插在16腳位
  pinMode(Yled, OUTPUT); //黃色LED插在17腳位
  pinMode(Gled, OUTPUT); //綠色LED插在18腳位  
  pinMode(Bled, OUTPUT); //藍色LED插在19腳位  
  pinMode(FAN, OUTPUT);

  digitalWrite(Rled, HIGH);////亮綠燈在腳位16輸出高電位(3.3V) 
  digitalWrite(Yled, HIGH);////亮綠燈在腳位17輸出高電位(3.3V) 
  digitalWrite(Gled, HIGH);////亮綠燈在腳位18輸出高電位(3.3V)   
  digitalWrite(Bled, HIGH);////亮綠燈在腳位19輸出高電位(3.3V)   
  Serial.println("LED亮燈 - END");
  delay(2000);
  digitalWrite(Rled, LOW);////亮綠燈在腳位16輸出高電位(3.3V) 
  digitalWrite(Yled, LOW);////亮綠燈在腳位17輸出高電位(3.3V) 
  digitalWrite(Gled, LOW);////亮綠燈在腳位18輸出高電位(3.3V)   
  digitalWrite(Bled, LOW);////亮綠燈在腳位19輸出高電位(3.3V)   
  Serial.println("LED燈熄 - END");
  delay(2000);
  
  Serial.print("開始連線到無線網路SSID:");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(1000);
  }
  Serial.println("連線完成");
  server.begin();
  Serial.print("伺服器已啟動，http://");
  Serial.println(WiFi.localIP());
}



void loop()
{
  for (int j = 0; j < 255; j += 2) {
    for (int i = 0; i < LEDS_COUNT; i++) {
      strip.setLedColorData(i, strip.Wheel((i * 256 / LEDS_COUNT + j) & 255));
    }
    strip.show();
    delay(10);
  }  
  
  //宣告一個連線
  WiFiClient client = server.available(); //有沒有人連到這個網頁
  if (client) {
    //有人連入時
    Serial.println("使用者連入");
    //-------------網頁的html部份開始--------------
    client.println("HTTP/1.1 200 OK");
    client.println("Content-Type: text/html");
    client.println("");
    client.println("<!DOCTYPE HTML>");
    client.println("<html><head><meta charset='utf-8'></head>");
    client.println("<br>");
    client.println("<h1>ESP32 Web Server By PS2 Stick</h1>");
    //HTML超連結指令

    client.println("<a href='/Rled=ON'><h2>開啟紅色LED</h2></a><br><br>");
    client.println("<a href='/Rled=OFF'><h2>關閉紅色LED</h1></a><br><br>");    
    client.println("<a href='/Yled=ON'><h2>開啟黃色LED</h1></a><br><br>");
    client.println("<a href='/Yled=OFF'><h2>關閉黃色LED</h1></a><br><br>");
    client.println("<a href='/Gled=ON'><h2>開啟綠色LED</h1></a><br><br>");
    client.println("<a href='/Gled=OFF'><h2>關閉綠色LED</h1></a><br><br>");
    client.println("<a href='/Bled=ON'><h2>開啟藍色LED</h1></a><br><br>");
    client.println("<a href='/Bled=OFF'><h2>關閉藍色LED</h1></a><br><br>");
    client.println("<a href='/FAN=ON'><h2>開啟USB風扇</h1></a><br><br>");
    client.println("<a href='/FAN=OFF'><h2>關閉USB風扇</h1></a><br><br>");

    client.println("<a href='/FAN=ON_Gled=ON_Yled=ON_Rled=ON_Bled=ON'><h1>全部開啟</h1></a><br><br>");
    client.println("<a href='/FAN=OFF_Gled=OFF_Yled=OFF_Rled=OFF_Bled=OFF'><h1>全部關閉</h1></a><br><br>");


    client.println("</html>");
    //-------------網頁的html部份結束--------------
    //取得使用者輸入的網址
    String request = client.readStringUntil('\r');
    Serial.println(request);
    //判斷超連結指令
    //網址內包含Gled=ON，就開啟綠燈，如果Gled=OFF，關閉綠燈
    if (request.indexOf("Rled=ON") >= 0) { digitalWrite(Rled, HIGH); }
    if (request.indexOf("Rled=OFF") >= 0) { digitalWrite(Rled, LOW); }
    if (request.indexOf("Yled=ON") >= 0) { digitalWrite(Yled, HIGH); }
    if (request.indexOf("Yled=OFF") >= 0) { digitalWrite(Yled, LOW); }
    if (request.indexOf("Gled=ON") >= 0) { digitalWrite(Gled, HIGH); }
    if (request.indexOf("Gled=OFF") >= 0) { digitalWrite(Gled, LOW); }
    if (request.indexOf("Bled=ON") >= 0) { digitalWrite(Bled, HIGH); }
    if (request.indexOf("Bled=OFF") >= 0) { digitalWrite(Bled, LOW); }
    if (request.indexOf("FAN=ON") >= 0) { digitalWrite(FAN, HIGH); }
    if (request.indexOf("FAN=OFF") >= 0) { digitalWrite(FAN, LOW); }

    Serial.println("完成");
    client.stop();//停止連線
  }
}
